version: '3'

services:

  nginx:
    build:
      args:
        - NGINX_VERSION=${NGINX_VERSION}
        - HTTP_PORT=${HTTP_PORT}
        - HTTPS_PORT=${HTTP_PORT}
      context: .
      dockerfile: docker/webservers/nginx/Dockerfile
    env_file: .env
    networks:
      project:
    ports:
      - "80:80"
    restart: on-failure
    volumes:
        - ./docker/webservers/nginx/conf:/etc/nginx/conf.d/:rw
        - ./:/var/www/html

  apache:
    build:
      args:
        - APACHE_VERSION=${APACHE_VERSION}
        - HTTP_PORT=${HTTP_PORT}
        - HTTPS_PORT=${HTTP_PORT}
      context: .
      dockerfile: docker/webservers/apache/Dockerfile
    env_file: .env
    networks:
      project:
    ports:
      - "80:80"
      - "443:443"
    restart: on-failure
    volumes:
      - ./docker/webservers/nginx/conf:/usr/local/apache2/conf/extra/vhosts/:rw
      - ./:/var/www/html

  php:
    build:
      args:
        # General PHP vars
        - PHP_VERSION=${PHP_VERSION}
        - PHP_PORT=${PHP_PORT}
        - PHP_XDEBUG_PORT=${PHP_XDEBUG_PORT}

        # XDebug
        - PHP_XDEBUG_IDEKEY=${PHP_XDEBUG_IDEKEY}
        - PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST}
        - PHP_XDEBUG_REMOTE_PORT=${PHP_XDEBUG_REMOTE_PORT}
        - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK}
        - PHP_XDEBUG_LOG_DIR=${PHP_XDEBUG_LOG_DIR}

        # PHP modules
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        - INSTALL_PHPREDIS=${INSTALL_PHPREDIS}
        - INSTALL_INTL=${INSTALL_INTL}
        - INSTALL_IMAGIK=${INSTALL_IMAGIK}
        - INSTALL_PGSQL=${INSTALL_PGSQL}
        - INSTALL_MYSQL=${INSTALL_MYSQL}

        # FE tools
        - PREFERRED_NODE_VERSION=${PREFERRED_NODE_VERSION}
        - INSTALL_SASS=${INSTALL_SASS}
        - INSTALL_GULP=${INSTALL_GULP}
      context: .
      dockerfile: docker/php/Dockerfile
    env_file: .env
    networks:
      project:
    environment:
      - PHP_IDE_CONFIG=serverName=docker-server
    volumes:
      - ./:/var/www/html

  mysql:
    build:
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      context: .
      dockerfile: docker/mysql/Dockerfile
    env_file: .env
    networks:
      project:
      database:
        aliases:
          - mysql
    ports:
      - "33060:3306"
    restart: on-failure
    volumes:
      - ./docker/mysql/mydata:/var/lib/mysql/:rw
  postgres:
    build:
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      context: .
      dockerfile: docker/postgres/Dockerfile
    env_file: .env
    networks:
      project:
      database:
        aliases:
          - postgres
    ports:
      - "54320:5432"
    restart: on-failure
    volumes:
        - ./docker/postgres/pgdata:/var/lib/postgresql/data/:rw
  redis:
    image: redis:alpine

networks:
  project:
  database:
